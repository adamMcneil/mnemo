const socket = new WebSocket('ws://localhost:8080');

socket.onopen = function(event) {
	alert('You are Connected to WebSocket Server');
};

// socket.onmessage = function(event) {
// 	const outputDiv = document.getElementById('output');
// 	outputDiv.innerHTML += `<p>Received <b>"${event.data}"</b> from server.</p>`;
// };

socket.onclose = function(event) {
	console.log('Disconnected from WebSocket server');
};

function sendMessage() {
	const messageInput = document.getElementById('messageInput');
	const message = messageInput.value;
	socket.send(message);
	messageInput.value = '';
}

const joystick = document.getElementById('joystick');
const container = document.getElementById('joystick-container');

const containerRect = container.getBoundingClientRect();
const centerX = containerRect.width / 2;
const centerY = containerRect.height / 2;
const maxDistance = centerX; // Radius limit

function handleMove(event) {
	const touch = event.touches ? event.touches[0] : event;
	const offsetX = touch.clientX - containerRect.left - centerX;
	const offsetY = touch.clientY - containerRect.top - centerY;

	// Calculate distance from center
	const distance = Math.sqrt(offsetX ** 2 + offsetY ** 2);
	const angle = Math.atan2(offsetY, offsetX);

	// Restrict movement within circular boundary
	const moveX = distance > maxDistance ? Math.cos(angle) * maxDistance : offsetX;
	const moveY = distance > maxDistance ? Math.sin(angle) * maxDistance : offsetY;

	joystick.style.transform = `translate(${moveX}px, ${moveY}px)`;

	const direction = { up: moveY / maxDistance, right: moveX / maxDistance }
	console.log(direction)
	socket.send(moveX / maxDistance)
	console.log('Direction:', { x: moveX / maxDistance, y: moveY / maxDistance });
}

function resetJoystick() {
	joystick.style.transform = 'translate(0, 0)';
}

// Event Listeners
joystick.addEventListener('mousedown', (e) => {
	document.addEventListener('mousemove', handleMove);
	document.addEventListener('mouseup', resetJoystick, { once: true });
});

joystick.addEventListener('touchstart', (e) => {
	document.addEventListener('touchmove', handleMove);
	document.addEventListener('touchend', resetJoystick, { once: true });
});

